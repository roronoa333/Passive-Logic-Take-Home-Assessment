import matplotlib.pyplot as plt
from Components.fluid import getfluidSpecs
from Components.pipes import getHeatLossFromPipes, pipeSystem
from Components.storageTank import HeatLostInStorage
import Components.solarPanels
from Components.pump import EnergyForPump 
import Components.fluid


def simulate(solarHeatGain,simulationTime):

    fluidSpecs = getfluidSpecs('water')
    pipeSpecs = pipeSystem()
    tankTemp = [302]
    volume = pipeSpecs[0]['length'] * pipeSpecs[0]['diameter']**2 * 3.14159*0.25
    timeStep = 1
    # Simulate behavior of components  over time
    for t in range(0, simulationTime, timeStep):

        heatLostFromPipes = getHeatLossFromPipes(pipeSpecs, tankTemp[-1])
        energyToPump = EnergyForPump(pipeSpecs,timeStep)
        energyToStore = HeatLostInStorage(tankTemp[-1]) 
        heatLoss = heatLostFromPipes + energyToPump + energyToStore
        netHeatTransfer = solarHeatGain*timeStep - heatLoss
        tempDelta =  netHeatTransfer / (fluidSpecs['density']*(fluidSpecs['specificHeat'])*volume*timeStep)

        new_temp = tankTemp[-1] + tempDelta
        tankTemp.append(new_temp)

        print("--------------------------------*************** Time Step : " + str(len(tankTemp) - 1) + " ***************--------------------------------")
        print("Energy generated by the the Solar Panel(s) by time step   : " + str(len(tankTemp) - 1) + " = " + str(solarHeatGain) + " Wh")
        print("Energy lost by the pipes in time step                     : " + str(len(tankTemp) - 1) + " = " + str(heatLostFromPipes) + " Wh")
        print("Energy spent by the pump                                  : " + str(len(tankTemp) - 1) + " = " + str(energyToPump) + " Wh")
        print("Energy lost in the storage tank in time step              : " + str(len(tankTemp) - 1) + " = " + str(energyToStore) + " Wh")
        print("Temperature at time step                                  : " + str(len(tankTemp) - 1) + " = " + str(new_temp) + " K")

    print("--------------------------------***************  End  ***************--------------------------------")
    print("NOTE : Please check for the png files for the plots")

    time = range(0, simulationTime + timeStep, timeStep)
    plt.plot(time, tankTemp, marker='o')
    plt.xlabel('Time (Hours)')
    plt.ylabel('Temperature (Â°K)')
    plt.title('Fluid Temperature Variation')
    plt.savefig('Fluid Temperature Variation.png')

    return tankTemp[-1]
